$hue: 212;

$headerBgColor: hsl($hue, 20%, 25%);
$subnavBgColor: hsl($hue, 20%, 30%);
$bgcolor: hsl($hue, 10%, 93%);
$lightBgColor: #fafafa;

$headerLinkHoverColor: rgba(0, 0, 0, 0.1);
$headerLinkActiveColor: rgba(0, 0, 0, 0.2);
$sidebarLinkHoverBgColor: hsl($hue, 20%, 95%);

$textcolor: hsl($hue, 20%, 20%);
$mediumdarktextcolor: hsl($hue, 15%, 40%);
$mediumtextcolor: hsl($hue, 10%, 60%);
$lighttextcolor: hsl($hue, 10%, 75%);
$linkcolor: hsl($hue, 90%, 50%);
$hairlineColor: hsl($hue, 10%, 90%);
$hairlineColorAlpha: hsla(240, 100%, 4%, 0.1);
$blurglowcolor: hsla($hue, 70%, 70%, 0);
$focusglowcolor: hsl($hue, 70%, 70%);
$lightselcolor: hsl($hue, 10%, 85%);
$darkselcolor: hsl($hue, 10%, 50%);

$submitcolor: #da5a47;
$submitHoverColor: #bf503f;
$submitActiveColor: #8c3b2e;

$secondarySubmitColor: hsl($hue, 10%, 60%);
$secondarySubmitHoverColor: hsl($hue, 10%, 50%);
$secondarySubmitActiveColor: hsl($hue, 10%, 40%);

$errorcolor: #da5a47;
$warningcolor: #e78640;
$successcolor: #00b007;
$noticecolor: #5286d9;

$btnBorderRadius: 3px;
$paneBorderRadius: 4px;
$elementBorderRadius: 3px;

@mixin sans-serif-font {
  font-family: "Helvetica Neue", HelveticaNeue, sans-serif;
}

// Flexbox stuff

@mixin display-flex {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-direction($value) {
  @if $value == column {
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-orient: horizontal;
  }

  -ms-flex-direction: $value;
  flex-direction: $value;
}

@mixin align-items($value) {
  @if $value == flex-start {
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -ms-flex-align: end;
  } @else {
    -ms-flex-align: $value;
  }

  align-items: $value;
}

@mixin justify-content($value) {
  @if $value == flex-start {
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -ms-flex-align: justify;
  } @else if $value == center {
    -ms-flex-align: center;
  }

  justify-content: $value;
}

@mixin flex-wrap($value) {
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }

  flex-wrap: $value;
}

@mixin flex-grow($value) {
  flex-grow: $value;
  -ms-flex: $value;
}

// Other

@mixin animation-iteration-count($count) {
  -webkit-animation-iteration-count: $count;
  -moz-animation-iteration-count: $count;
  animation-iteration-count: $count;
}

@mixin animation-duration($time) {
  -webkit-animation-duration: $time;
  -moz-animation-duration: $time;
  animation-duration: $time;
}

@mixin animation-name($name) {
  -webkit-animation-name: $name;
  -moz-animation-name: $name;
  animation-name: $name;
}

@mixin animation-timing-function($func) {
  -webkit-animation-timing-function: $func;
  -moz-animation-timing-function: $func;
  animation-timing-function: $func;
}

@mixin backface-visibility($value) {
  -webkit-backface-visibility: $value;
  backface-visibility: $value;
}

@mixin box-shadow($params...) {
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  box-shadow: $params;
}

@mixin box-shadow-transition($time) {
  -webkit-transition: -webkit-box-shadow linear $time;
  -moz-transition: box-shadow linear $time;
}

@mixin box-sizing($value) {
  -webkit-box-sizing: $value;
  -moz-box-sizing: $value;
  box-sizing: $value;
}

@mixin linear-gradient($params...) {
  background-image: -webkit-linear-gradient($params);
  background-image: -moz-linear-gradient($params);
  background-image: -ms-linear-gradient($params);
  background-image: -o-linear-gradient($params);
  background-image: linear-gradient($params);
}

@mixin radial-gradient($params...) {
  background-image: -webkit-radial-gradient($params);
  background-image: -moz-radial-gradient($params);
  background-image: -ms-radial-gradient($params);
  background-image: -o-radial-gradient($params);
  background-image: radial-gradient($params);
}

@mixin svg-mask($color) {
  rect, circle, ellipse, line, polyline, polygon, path, text {
    fill: $color;
    stroke-width: 0;
  }
}

@mixin transform($params...) {
  -webkit-transform: $params;
  -moz-transform: $params;
  -ms-transform: $params;
  -o-transform: $params;
  transform: $params;
}

@mixin filter($params...) {
  -webkit-filter: $params;
  filter: $params;
}

@mixin transition($params...) {
  -webkit-transition: $params;
  -moz-transition: $params;
  -ms-transition: $params;
  transition: $params;
}

@mixin user-select($value) {
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
}

@mixin perspective($value) {
  -webkit-perspective: $value;
  -moz-perspective: $value;
  -ms-perspective: $value;
  perspective: $value;
}

@mixin icon {
  font-family: 'Craft';
  speak: none;
  -webkit-font-feature-settings: "liga", "dlig";
  -moz-font-feature-settings: "liga=1, dlig=1";
  -moz-font-feature-settings: "liga", "dlig";
  -ms-font-feature-settings: "liga", "dlig";
  -o-font-feature-settings: "liga", "dlig";
  font-feature-settings: "liga", "dlig";
  text-rendering: optimizeLegibility;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  direction: ltr; // Fixes a rendering issue in Chrome/Win
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  display: inline-block;
  text-align: center;
  font-style: normal;
  vertical-align: middle;
  word-wrap: normal !important;
  @include user-select(none);
}

@mixin clearafter {
  content: '.';
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
}

@mixin pane {
  background: #fff;
  @include box-shadow(0 0 0 1px $hairlineColor);
}

@mixin light-on-dark-text() {
  // Make light on dark text sharp on Macs
  // (sub-pixel antialiasing looks too bold/blurry with light text on dark background)
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
}

// RTL stuff

@mixin left($left) {
  body.ltr & {
    left: $left;
  }
  body.rtl & {
    right: $left;
  }
}

@mixin right($right) {
  body.ltr & {
    right: $right;
  }
  body.rtl & {
    left: $right;
  }
}

@mixin alignleft {
  body.ltr & {
    text-align: left;
  }
  body.rtl & {
    text-align: right;
  }
}

@mixin alignright {
  body.ltr & {
    text-align: right;
  }
  body.rtl & {
    text-align: left;
  }
}

@mixin border-left($params...) {
  body.ltr & {
    border-left: $params;
  }
  body.rtl & {
    border-right: $params;
  }
}

@mixin border-right($params...) {
  body.ltr & {
    border-right: $params;
  }
  body.rtl & {
    border-left: $params;
  }
}

@mixin border-radius($tl, $tr, $br, $bl) {
  body.ltr & {
    border-radius: $tl $tr $br $bl;
  }
  body.rtl & {
    border-radius: $tr $tl $bl $br;
  }
}

@mixin border-top-left-radius($params...) {
  body.ltr & {
    border-top-left-radius: $params;
  }
  body.rtl & {
    border-top-right-radius: $params;
  }
}

@mixin border-top-right-radius($params...) {
  body.ltr & {
    border-top-right-radius: $params;
  }
  body.rtl & {
    border-top-left-radius: $params;
  }
}

@mixin border-bottom-left-radius($params...) {
  body.ltr & {
    border-bottom-left-radius: $params;
  }
  body.rtl & {
    border-bottom-right-radius: $params;
  }
}

@mixin border-bottom-right-radius($params...) {
  body.ltr & {
    border-bottom-right-radius: $params;
  }
  body.rtl & {
    border-bottom-left-radius: $params;
  }
}

@mixin floatleft {
  body.ltr & {
    float: left;
  }
  body.rtl & {
    float: right;
  }
}

@mixin floatright {
  body.ltr & {
    float: right;
  }
  body.rtl & {
    float: left;
  }
}

@mixin margin($t, $r, $b, $l, $important: '') {
  body.ltr & {
    margin: $t $r $b $l unquote($important);
  }
  body.rtl & {
    margin: $t $l $b $r unquote($important);
  }
}

@mixin margin-left($margin...) {
  body.ltr & {
    margin-left: $margin;
  }
  body.rtl & {
    margin-right: $margin;
  }
}

@mixin margin-right($margin...) {
  body.ltr & {
    margin-right: $margin;
  }
  body.rtl & {
    margin-left: $margin;
  }
}

@mixin padding($t, $r, $b, $l) {
  body.ltr & {
    padding: $t $r $b $l;
  }
  body.rtl & {
    padding: $t $l $b $r;
  }
}

@mixin padding-left($padding...) {
  body.ltr & {
    padding-left: $padding;
  }
  body.rtl & {
    padding-right: $padding;
  }
}

@mixin padding-right($padding...) {
  body.ltr & {
    padding-right: $padding;
  }
  body.rtl & {
    padding-left: $padding;
  }
}

// Misc

@mixin h6-styles {
  margin: 14px 0 3px;
  font-size: 10px;
  line-height: 1.2;
  color: $lighttextcolor;
  text-transform: uppercase;
  font-weight: bold;
}

@mixin token-styles {
  display: inline-block;
  border: 1px solid #c1c1c1;
  border-radius: 10px;
  padding: 1px 7px;
  font-size: 12px;
  line-height: 14px;
  color: $textcolor;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.5);
  background: #ddd;
}

@mixin menu-styles {
  z-index: 100;
  margin-bottom: 10px;
  border-radius: $btnBorderRadius;
  padding: 0 14px;
  overflow: auto;
  background: #fff;
  @include user-select(none);
  @include box-shadow(0 0 0 1px $hairlineColorAlpha, 0 5px 20px rgba(0, 0, 0, 0.25));
}

@mixin menu-option-styles {
  margin: 0 -14px;
  padding: 10px 14px;
  color: $textcolor;
  text-decoration: none;
  white-space: nowrap;
}

@mixin menu-option-active-styles {
  color: $textcolor;
  background-color: $lightselcolor;
}

@mixin text-input-styles {
  border: 1px solid $hairlineColor;
  border-radius: $btnBorderRadius;
  @include box-shadow(0 0 5px hsla(205, 100%, 60%, 0));
  @include box-shadow-transition(100ms);
}

@mixin text-input-focussed-styles {
  border-color: $focusglowcolor;
  outline: none;
  @include box-shadow(0 0 5px hsl(205, 100%, 75%));
}

@mixin placeholder-styles {
  color: $lighttextcolor;
}

@mixin select-styles {
  position: relative;
  border-radius: $btnBorderRadius;
  white-space: nowrap;
}

@mixin select-container-styles {
  position: relative;
  @include linear-gradient(#fff, hsl($hue, 5%, 98%));
  @include box-shadow(inset 0 0 0 1px rgba(0, 0, 0, 0.1), 0 0px 3px rgba(0, 0, 0, 0.07));
  :not(.flex) > & {
    display: inline-block;
  }
}

;
@mixin select-arrow-styles {
  @include icon;
  position: absolute;
  z-index: 1;
  top: calc(50% - 5px);
  @include right(9px);
  font-size: 10px;
  content: 'downangle';
  @include user-select(none);
  pointer-events: none;
}

@mixin select-input-styles {
  display: block;
  position: relative;
  border: 0;
  @include padding(7px, 22px, 7px, 10px);
  font-size: 13px;
  line-height: 16px;
  color: $textcolor;
  background: none;
  @include box-shadow(0 0 2px hsla(205, 100%, 60%, 0), inset 0 0 0 1px hsla(205, 100%, 60%, 0));
  -webkit-transition: border linear 100ms, -webkit-box-shadow linear 100ms;
  -moz-transition: border linear 100ms, box-shadow linear 100ms;
  -webkit-appearance: none;
}

@mixin select-input-fullwidth-styles {
  min-width: 100%;
}

@mixin select-input-focussed-styles {
  border-color: $focusglowcolor;
  outline: none;
  @include box-shadow(0 0 2px hsl(205, 100%, 60%), inset 0 0 0 1px hsla(205, 100%, 60%, 0.5));
}
